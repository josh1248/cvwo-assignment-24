{"ast":null,"code":"var _jsxFileName = \"/Users/joshthoojensen/Library/Mobile Documents/com~apple~CloudDocs/CVWO/X-ICZzfs/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  position,\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => console.log(position * 2),\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [squares, setSequares] = useState(Array(9).fill(\"Q\"));\n  function handleClick() {\n    const new_squares = squares.slice();\n    {/*slice creates a shallow copy - non-primitive values are shared.\n       since our array only contains primitive strs, this is sufficient.\n       For deep copying, another library will be needed.*/}\n    new_squares[0] = \"XXX\";\n    setSequares(new_squares);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        position: \"0\",\n        value: squares[0],\n        onSquareClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"jjzuE5OskRTvYw0PFJq9lO7zsg4=\");\n_c2 = Board;\nfunction compB() {\n  return /*#__PURE__*/_jsxDEV(Square, {\n    value: \"111\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\nexport { compB };\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","position","value","onSquareClick","className","onClick","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","squares","setSequares","Array","fill","handleClick","new_squares","slice","_c2","compB","$RefreshReg$"],"sources":["/Users/joshthoojensen/Library/Mobile Documents/com~apple~CloudDocs/CVWO/X-ICZzfs/src/App.js"],"sourcesContent":["import {useState} from \"react\"\n\nfunction Square({position, value, onSquareClick }) {\n  return (\n    <button\n      className=\"square\"\n      onClick={() => console.log(position * 2)}\n    >\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [squares, setSequares] = useState(Array(9).fill(\"Q\"));\n\n  function handleClick() {\n    const new_squares = squares.slice();\n    {/*slice creates a shallow copy - non-primitive values are shared.\n       since our array only contains primitive strs, this is sufficient.\n       For deep copying, another library will be needed.*/}\n    new_squares[0] = \"XXX\";\n    setSequares(new_squares);\n  }\n  return (\n    <>\n      <div className=\"board-row\">\n        <Square position=\"0\" value={squares[0]} onSquareClick={handleClick}/>\n        <Square value=\"2\"/>\n        <Square value=\"3\"/>\n        {/*positional arguments only for React*/}\n      </div>\n\n      <div className=\"board-row\">\n        <Square value=\"4\"/>\n        <Square value=\"5\"/>\n        <Square value=\"6\"/>\n      </div>      \n      \n      <div className=\"board-row\">\n        <Square value=\"7\"/>\n        <Square value=\"8\"/>\n        <Square value=\"9\"/>\n      </div>\n    </>\n  );\n}\n\nfunction compB() {\n  return (\n    <Square value=\"111\"/>\n  )\n}\n\nexport {compB};\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,MAAMA,CAAC;EAACC,QAAQ;EAAEC,KAAK;EAAEC;AAAc,CAAC,EAAE;EACjD,oBACEN,OAAA;IACEO,SAAS,EAAC,QAAQ;IAClBC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACN,QAAQ,GAAG,CAAC,CAAE;IAAAO,QAAA,EAExCN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACC,EAAA,GATQb,MAAM;AAWf,eAAe,SAASc,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACuB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAE3D,SAASC,WAAWA,CAAA,EAAG;IACrB,MAAMC,WAAW,GAAGL,OAAO,CAACM,KAAK,CAAC,CAAC;IACnC,CAAC;AACL;AACA,0DAFK;IAGDD,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK;IACtBJ,WAAW,CAACI,WAAW,CAAC;EAC1B;EACA,oBACExB,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAI,QAAA,gBACxBX,OAAA,CAACG,MAAM;QAACC,QAAQ,EAAC,GAAG;QAACC,KAAK,EAAEc,OAAO,CAAC,CAAC,CAAE;QAACb,aAAa,EAAEiB;MAAY;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrEf,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnBf,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CAAC,eAENf,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAI,QAAA,gBACxBX,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnBf,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnBf,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAENf,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAI,QAAA,gBACxBX,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnBf,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnBf,OAAA,CAACG,MAAM;QAACE,KAAK,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA,eACN,CAAC;AAEP;AAACG,EAAA,CAjCuBD,KAAK;AAAAS,GAAA,GAALT,KAAK;AAmC7B,SAASU,KAAKA,CAAA,EAAG;EACf,oBACE3B,OAAA,CAACG,MAAM;IAACE,KAAK,EAAC;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEzB;AAEA,SAAQY,KAAK;AAAE,IAAAX,EAAA,EAAAU,GAAA;AAAAE,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}